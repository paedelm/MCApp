// <auto-generated />
using System;
using MCApp.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MCApp.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20180819190826_azurebob")]
    partial class azurebob
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MCApp.API.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accountname");

                    b.Property<double>("Balance");

                    b.Property<double>("CalculatedInterest");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Description");

                    b.Property<string>("InterestPeriod");

                    b.Property<DateTime>("LastActive");

                    b.Property<DateTime>("LastInterestMutation");

                    b.Property<DateTime>("LastMutationCreated");

                    b.Property<double>("Percentage");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("MCApp.API.Models.Interest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Description");

                    b.Property<DateTime>("InterestDate");

                    b.Property<double>("Percentage");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("UserId", "AccountId");

                    b.ToTable("Interests");
                });

            modelBuilder.Entity("MCApp.API.Models.Mutation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId");

                    b.Property<double>("Amount");

                    b.Property<double>("Balance");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Description");

                    b.Property<DateTime>("InterestDate");

                    b.Property<int>("PrevId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasAlternateKey("PrevId");

                    b.HasIndex("AccountId");

                    b.HasIndex("Created");

                    b.HasIndex("UserId", "AccountId");

                    b.ToTable("Mutations");
                });

            modelBuilder.Entity("MCApp.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("KnownAs");

                    b.Property<DateTime>("LastActive");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasAlternateKey("Username");

                    b.HasIndex("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MCApp.API.Models.Account", b =>
                {
                    b.HasOne("MCApp.API.Models.User", "User")
                        .WithMany("Accounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("MCApp.API.Models.Interest", b =>
                {
                    b.HasOne("MCApp.API.Models.Account", "Account")
                        .WithMany("Interests")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MCApp.API.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MCApp.API.Models.Mutation", b =>
                {
                    b.HasOne("MCApp.API.Models.Account", "Account")
                        .WithMany("Mutations")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MCApp.API.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
